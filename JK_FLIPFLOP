module JK_FLIPFLOP(J, K, CLK, Q, Q_bar);
  input J;
  input K;
  input CLK;
  output reg Q, Q_bar;

  always @(posedge CLK or J or K) 
  begin
    case ({J, K})
      2'b00: Q <= Q;
      2'b01: Q <= 1'b0;
      2'b10: Q <= 1'b1;
      2'b11: Q <= ~Q;
    endcase
    Q_bar = ~Q;
  end
endmodule
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
TESTBENCH
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
module JK_FLIPFLOP_TB();
reg J,K,CLK;
wire Q, Q_bar;
JK_FLIPFLOP DUT(J,K,CLK,Q,Q_bar);
initial 
begin
  CLK=0;
     forever #10 CLK = ~CLK;  
end 

initial
 begin 
  J= 0; K= 0;#20
  J= 0; K= 1; #20
  J= 1; K= 0; #20
  J= 1; K=1; #20
  $finish;
 end 
endmodule
